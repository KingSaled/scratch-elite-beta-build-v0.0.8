{"version":3,"file":"GoldFoilFilter-BfUnYJey.js","sources":["../../src/effects/GoldFoilFilter.ts"],"sourcesContent":["/* @ts-nocheck */\r\nimport {\r\n  Container,\r\n  Sprite,\r\n  Graphics,\r\n  Assets,\r\n  BlurFilter,\r\n  Ticker,\r\n} from 'pixi.js';\r\n\r\ninterface FoilOpts {\r\n  alpha?: number;\r\n  radius?: number;\r\n\r\n  bloom?: boolean;\r\n  bloomStrength?: number;\r\n  bloomLevels?: number;\r\n\r\n  sparkles?: boolean;\r\n  sparkleRate?: number; // spawns/sec\r\n  sparkleMin?: number; // px\r\n  sparkleMax?: number; // px\r\n  sparkleAlpha?: number; // 0..1 peak alpha\r\n}\r\n\r\ninterface Spark { g: any; t: number; life: number }\r\n\r\nexport default class GoldFoilFilter {\r\n  url: string;\r\n  alpha: number;\r\n  radius: number;\r\n\r\n  bloom: boolean;\r\n  bloomStrength: number;\r\n  bloomLevels: number;\r\n\r\n  sparkles: boolean;\r\n  sparkleRate: number;\r\n  sparkleMin: number;\r\n  sparkleMax: number;\r\n  sparkleAlpha: number;\r\n\r\n  sprite: any;\r\n  mask: any;\r\n  private _children: any[] = [];\r\n  private _sparks: Spark[] = [];\r\n  private _tickerFn?: (d: number) => void;\r\n  private _rafId: number | null = null;\r\n\r\n  constructor(url: string, opts: FoilOpts = {}) {\r\n    this.url = url || '';\r\n    this.alpha = opts.alpha ?? 0.26;\r\n    this.radius = opts.radius ?? 20;\r\n\r\n    this.bloom = !!opts.bloom;\r\n    this.bloomStrength = opts.bloomStrength ?? 1.1;\r\n    this.bloomLevels = Math.max(0, Math.floor(opts.bloomLevels ?? 1));\r\n\r\n    this.sparkles = opts.sparkles ?? true;\r\n    this.sparkleRate = Math.max(0, opts.sparkleRate ?? 0.1);\r\n    this.sparkleMin = Math.max(2, Math.floor(opts.sparkleMin ?? 6));\r\n    this.sparkleMax = Math.max(\r\n      this.sparkleMin,\r\n      Math.floor(opts.sparkleMax ?? 14)\r\n    );\r\n    this.sparkleAlpha = Math.min(1, Math.max(0, opts.sparkleAlpha ?? 0.18));\r\n\r\n    this.sprite = null;\r\n    this.mask = null;\r\n  }\r\n\r\n  async install(target: any, width: number, height: number): Promise<any> {\r\n    if (!this.url) return null;\r\n    const tex = await Assets.load(this.url);\r\n\r\n    const root = new Container();\r\n    (root).eventMode = 'none';\r\n\r\n    if (this.bloom && this.bloomLevels > 0) {\r\n      for (let i = 0; i < this.bloomLevels; i++) {\r\n        const b = new Sprite(tex);\r\n        b.width = Math.round(width);\r\n        b.height = Math.round(height);\r\n        b.alpha = (this.alpha * 0.5) / this.bloomLevels;\r\n        (b).eventMode = 'none';\r\n        const blur = new BlurFilter();\r\n        blur.quality = 1;\r\n        blur.strength = (i + 1) * 5 * (this.bloomStrength ?? 1);\r\n        b.filters = [blur];\r\n        root.addChild(b);\r\n        this._children.push(b);\r\n      }\r\n    }\r\n\r\n    const spr = new Sprite(tex);\r\n    spr.width = Math.round(width);\r\n    spr.height = Math.round(height);\r\n    spr.alpha = this.alpha;\r\n    (spr).eventMode = 'none';\r\n    root.addChild(spr);\r\n    this._children.push(spr);\r\n\r\n    const mask = new Graphics()\r\n      .roundRect(0, 0, Math.round(width), Math.round(height), this.radius)\r\n      .fill(0xffffff);\r\n\r\n    target.addChild(root, mask);\r\n    (root).mask = mask;\r\n\r\n    // assign BEFORE starting loops\r\n    this.sprite = root;\r\n    this.mask = mask;\r\n\r\n    // Ticker + RAF fallback\r\n    this._tickerFn = (delta: number) =>\r\n      this._tick(delta / 60, width, height, root);\r\n    Ticker.shared.add(this._tickerFn);\r\n    Ticker.shared.start();\r\n\r\n    const rafLoop = () => {\r\n      this._tick(1 / 60, width, height, root);\r\n      this._rafId = requestAnimationFrame(rafLoop as any);\r\n    };\r\n    this._rafId = requestAnimationFrame(rafLoop as any);\r\n\r\n    return root;\r\n  }\r\n\r\n  private _spawnSpark(width: number, height: number, parent: any) {\r\n    const s =\r\n      this.sparkleMin + Math.random() * (this.sparkleMax - this.sparkleMin);\r\n    const g = new Graphics().circle(0, 0, s / 2).fill(0xffffff);\r\n    (g).eventMode = 'none';\r\n    g.x = Math.random() * width;\r\n    g.y = Math.random() * height;\r\n    g.alpha = 0.0;\r\n    const blur = new BlurFilter();\r\n    blur.quality = 1;\r\n    blur.strength = s * 0.6;\r\n    (g).filters = [blur];\r\n    parent.addChild(g);\r\n    this._sparks.push({ g, t: 0, life: 1.4 + Math.random() * 0.8 });\r\n  }\r\n\r\n  private _tick(dt: number, width: number, height: number, parent: any) {\r\n    if (this.sparkles && Math.random() < this.sparkleRate * dt) {\r\n      this._spawnSpark(width, height, parent);\r\n    }\r\n    const next: Spark[] = [];\r\n    for (const sp of this._sparks) {\r\n      sp.t += dt;\r\n      const half = sp.life * 0.4;\r\n      const a =\r\n        sp.t < half\r\n          ? (sp.t / half) * this.sparkleAlpha\r\n          : Math.max(\r\n              0,\r\n              (1 - (sp.t - half) / (sp.life - half)) * this.sparkleAlpha\r\n            );\r\n      sp.g.alpha = a;\r\n      if (sp.t >= sp.life) {\r\n        try {\r\n          sp.g.destroy?.();\r\n        } catch {}\r\n      } else {\r\n        next.push(sp);\r\n      }\r\n    }\r\n    this._sparks = next;\r\n  }\r\n\r\n  updateParallax(nx: number, ny: number, strength: number) {\r\n    if (!this.sprite) return;\r\n    this.sprite.x = Math.round(-nx * strength);\r\n    this.sprite.y = Math.round(-ny * strength);\r\n  }\r\n\r\n  destroy() {\r\n    if (this._tickerFn) Ticker.shared.remove(this._tickerFn);\r\n    if (this._rafId != null) cancelAnimationFrame(this._rafId);\r\n    try {\r\n      this._children.forEach((c: any) => c.destroy?.());\r\n    } catch {}\r\n    try {\r\n      this._sparks.forEach((s) => s.g?.destroy?.());\r\n    } catch {}\r\n    try {\r\n      this.sprite?.destroy?.();\r\n    } catch {}\r\n    try {\r\n      this.mask?.destroy?.();\r\n    } catch {}\r\n    this._children = [];\r\n    this._sparks = [];\r\n    this.sprite = null;\r\n    this.mask = null;\r\n  }\r\n\r\n  get uniforms() {\r\n    return { uMouse: new Float32Array([0, 0]), uTime: 0 };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}